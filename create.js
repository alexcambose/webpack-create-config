const path = require('path');
const ops = require('object-plain-string');
const utils = require('./utils');

module.exports = ({entry, output, devtool, loaders, devserver, watch}) => {
    let packagesToInstall = [];
    const obj = {
        entry,
        output: {
            filename: path.parse(output).base,
            path: '~!~path.resolve(__dirname, "' + path.parse(output).dir + '")',
        }
    };

    if(devtool) obj.devtool = devtool;
    if(loaders){
        const allLoaders = utils.getLoader(loaders);
        obj.module = {};
        packagesToInstall = utils.appendPackagesToInstall(allLoaders, packagesToInstall);

        obj.module.rules = allLoaders.map(e => e.rule);
    }

    if(devserver){
        obj.devserver = {
            contentBase: '~!~path.join(__dirname, "'+path.parse(output).dir+'")',
            compress: true,
            port: 9000
        };
    }
    if(watch){
        obj.watch = true;
    }
    return `/* This file was generated by 
 please run the following command
    npm install --save-dev ${packagesToInstall.join(' ')}
*/ 
const path = require('path');
module.exports = ${ops(obj)};`
};